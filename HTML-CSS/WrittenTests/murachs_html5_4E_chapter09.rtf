{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\fswiss\fprq2\fcharset0 Calibri;}{\f2\fmodern\fprq1\fcharset0 Courier New;}}
{\colortbl ;\red0\green0\blue0;\red255\green0\blue0;}
{\*\generator Riched20 10.0.19041}{\*\mmathPr\mnaryLim0\mdispDef1\mwrapIndent1440 }\viewkind4\uc1 
\pard\brdrb\brdrs\brdrw75\brdrcf1 \nowidctlpar\hyphpar0\li-630\cf1\b\f0\fs28 Chapter 9: How to use Flexible Box Layout for page layout and RWD\par
HTML5 and CSS3 (4th edition)\b0\fs2\par

\pard\nowidctlpar\hyphpar0\fs36\par

\pard\nowidctlpar\hyphpar0\li-630\b\fs22 MULTIPLE CHOICE\b0\fs2\par

\pard\nowidctlpar\hyphpar0\fs22\par

\pard\keep\hyphpar0\widctlpar\fi-630\sa120\tab 1.\tab Flexbox is typically used to lay out\par
\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar a.\cell simple web pages\cell\row\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar b.\cell complex web pages\cell\row\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar\cf2 c.\cell selected components within a web page\cell\row\trowd\trgaph45\trleft-45\trrh225\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar\cf1 d.\cell entire web pages\cell\row 
\pard\nowidctlpar\hyphpar0\fs2\par

\pard\nowidctlpar\hyphpar0\sa1\fs12\par

\pard\nowidctlpar\hyphpar0\fs22\par

\pard\keep\hyphpar0\widctlpar\fi-630\sa120\tab 2.\tab A flex container can contain one or more\par
\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx4185\cellx4545\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar a.\cell flex boxes\cell c.\cell cross axes\cell\row\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx4185\cellx4545\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar\cf2 b.\cell flex items\cell\cf1 d.\cell floats\cell\row 
\pard\nowidctlpar\hyphpar0\fs2\par

\pard\nowidctlpar\hyphpar0\sa1\fs12\par

\pard\nowidctlpar\hyphpar0\fs22\par

\pard\keep\hyphpar0\widctlpar\fi-630\sa120\tab 3.\tab The flex direction determines how flex items are laid out along the\par
\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx4185\cellx4545\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar a.\cell horizontal axis\cell\cf2 c.\cell main axis\cell\row\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx4185\cellx4545\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar\cf1 b.\cell vertical axis\cell d.\cell cross axis\cell\row 
\pard\nowidctlpar\hyphpar0\fs2\par

\pard\nowidctlpar\hyphpar0\sa1\fs12\par

\pard\nowidctlpar\hyphpar0\fs22\par

\pard\keep\hyphpar0\widctlpar\fi-630\sa120\tab 4.\tab What CSS property do you use to display a block element as a flex container?\par
\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx4230\cellx4545\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar\cf2 a.\cell\b\f2\fs18 display\b0\f0\fs22\cell\cf1 c.\cell\b\f2\fs18 flexbox\b0\f0\fs22\cell\row\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx4230\cellx4545\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar b.\cell\b\f2\fs18 flex\b0\f0\fs22\cell\cf0 d.\cell\b\f2\fs18 flex-direction\b0\f0\fs22\cell\row 
\pard\nowidctlpar\hyphpar0\cf1\fs2\par

\pard\nowidctlpar\hyphpar0\sa1\fs12\par

\pard\nowidctlpar\hyphpar0\fs22\par

\pard\keep\hyphpar0\widctlpar\fi-630\sa120\tab 5.\tab What CSS property do you use to determine whether flex items are displayed horizontally or vertically?\par
\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx4185\cellx4545\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar a.\cell\b\f2\fs18 display\b0\f0\fs22\cell c.\cell\b\f2\fs18 flexbox\b0\f0\fs22\cell\row\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx4185\cellx4545\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar b.\cell\b\f2\fs18 flex\b0\f0\fs22\cell\cf2 d.\cell\b\f2\fs18 flex-direction\b0\f0\fs22\cell\row 
\pard\nowidctlpar\hyphpar0\cf1\fs2\par

\pard\nowidctlpar\hyphpar0\sa1\fs12\par

\pard\nowidctlpar\hyphpar0\fs22\par

\pard\keep\hyphpar0\widctlpar\fi-630\sa120\tab 6.\tab Flexbox provides for laying out elements side by side\par
\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar a.\cell without using the box model\cell\row\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar\cf2 b.\cell without using floats\cell\row\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar\cf1 c.\cell without using CSS\cell\row\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar d.\cell without using media queries\cell\row 
\pard\nowidctlpar\hyphpar0\fs2\par

\pard\nowidctlpar\hyphpar0\sa1\fs12\par

\pard\nowidctlpar\hyphpar0\fs22\par

\pard\keep\hyphpar0\widctlpar\fi-630\sa120\tab 7.\tab By default, the items in a flex container are displayed\par
\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar a.\cell vertically from top to bottom\cell\row\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar b.\cell vertically from bottom to top\cell\row\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar\cf2 c.\cell horizontally from left to right\cell\row\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar\cf1 d.\cell horizontally from right to left\cell\row 
\pard\nowidctlpar\hyphpar0\fs2\par

\pard\nowidctlpar\hyphpar0\sa1\fs12\par

\pard\nowidctlpar\hyphpar0\fs22\par
\par
\par
\par
\par

\pard\keep\hyphpar0\widctlpar\fi-630\sa120\tab 8.\tab You use the justify-content property to align the flex items in a container\par
\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar\cf2 a.\cell along the main axis\cell\row\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar\cf1 b.\cell along the cross axis\cell\row\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar c.\cell along the main or cross axis, depending on the flex direction\cell\row 
\pard\nowidctlpar\hyphpar0\fs2\par

\pard\nowidctlpar\hyphpar0\sa1\fs12\par

\pard\nowidctlpar\hyphpar0\fs22\par

\pard\keep\hyphpar0\widctlpar\fi-630\sa120\tab 9.\tab If the flex items in a container are displayed in a row, how are the items aligned horizontally by default?\par
\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar a.\cell in the center of the container\cell\row\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar\cf2 b.\cell at the start of the container\cell\row\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar\cf1 c.\cell at the end of the container\cell\row\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar d.\cell spaced evenly across the container\cell\row 
\pard\nowidctlpar\hyphpar0\fs2\par

\pard\nowidctlpar\hyphpar0\sa1\fs12\par

\pard\nowidctlpar\hyphpar0\fs22\par

\pard\keep\hyphpar0\widctlpar\fi-630\sa120\tab 10.\tab If the items within a flex container are displayed in a row and you want an equal amount of space to be allocated between the flex items, before the first flex item, and after the last flex item, you should set the justify-content property to\par
\trowd\trgaph45\trleft-45\trrh285\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx4185\cellx4545\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar a.\cell space-between\cell c.\cell space-around\cell\row\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx4185\cellx4545\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar\cf2 b.\cell space-evenly\cell\cf1 d.\cell center\cell\row 
\pard\nowidctlpar\hyphpar0\fs2\par

\pard\nowidctlpar\hyphpar0\sa1\fs12\par

\pard\nowidctlpar\hyphpar0\fs22\par

\pard\keep\hyphpar0\widctlpar\fi-630\sa120\tab 11.\tab If the items within a flex container are displayed in a row and you want an equal amount of space to be allocated between the flex items but you don\rquote t want any space before the first flex item or after the last flex item, you should set the justify-content property to\par
\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx4185\cellx4545\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar\cf2 a.\cell space-between\cell\cf1 c.\cell space-around\cell\row\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx4185\cellx4545\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar b.\cell space-evenly\cell d.\cell center\cell\row 
\pard\nowidctlpar\hyphpar0\fs2\par

\pard\nowidctlpar\hyphpar0\sa1\fs12\par

\pard\nowidctlpar\hyphpar0\fs22\par

\pard\keep\hyphpar0\widctlpar\fi-630\sa120\tab 12.\tab If the flex items in a container are displayed in a row, how are the items aligned vertically by default?\par
\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar a.\cell at the top of the container\cell\row\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar b.\cell at the bottom of the container\cell\row\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar c.\cell in the middle of the container\cell\row\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar\cf2 d.\cell extending from the top to the bottom of the container\cell\row 
\pard\nowidctlpar\hyphpar0\cf1\fs2\par

\pard\nowidctlpar\hyphpar0\sa1\fs12\par

\pard\nowidctlpar\hyphpar0\fs22\par

\pard\keep\hyphpar0\widctlpar\fi-630\sa120\tab 13.\tab What CSS property do you use to override the alignment of a single flex item along the cross axis?\par
\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx4185\cellx4545\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar a.\cell\b\f2\fs18 justify-item\cell\b0\f0\fs22 c.\cell\b\f2\fs18 justify-self\cell\row\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx4185\cellx4545\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar\b0\f0\fs22 b.\cell\b\f2\fs18 align-item\b0\f0\fs22\cell\cf2 d.\cell\b\f2\fs18 align-self\b0\f0\fs22\cell\row 
\pard\nowidctlpar\hyphpar0\cf1\fs2\par

\pard\nowidctlpar\hyphpar0\sa1\fs12\par

\pard\nowidctlpar\hyphpar0\fs22\par

\pard\keep\hyphpar0\widctlpar\fi-630\sa120\tab 14.\tab By default, if the flex items within a flex container are too wide to fit within the container\par
\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar a.\cell the flex items will wrap to multiple lines\cell\row\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar b.\cell the rightmost flex items will be truncated\cell\row\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar c.\cell the leftmost flex items will be truncated \cell\row\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar\cf2 d.\cell the sizes of the flex items will be reduced as much as possible and the content will be wrapped within the flex items \cell\row 
\pard\nowidctlpar\hyphpar0\cf1\fs2\par
\fs22\par
\par
\par
\par
\par
\par

\pard\keep\hyphpar0\widctlpar\sa120\b Code example 9-1\par

\pard\keep\hyphpar0\widctlpar\f2\fs18 <main>\par
    <aside>Sidebar</section>\par
    <section>Content</section>\par
</main>\b0\f0\fs2\par

\pard\nowidctlpar\hyphpar0\fs22\par

\pard\keep\hyphpar0\widctlpar\fi-630\sa120\tab 15.\tab (Refer to code example 9-1) Given the CSS that follows, what will the width of the section element be  if the width of the main element is 800 pixels?\par

\pard\keep\hyphpar0\widctlpar\b\f2\fs18 main \{ display: flex; \}\par
section \{ flex-basis: 60%; \}\par

\pard\keep\hyphpar0\widctlpar\sa120 aside \{ flex-basis: 40%; \}\par
\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx4185\cellx4545\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar\b0\f0\fs22 a.\cell 320 pixels\cell\cf2 c.\cell 480 pixels\cell\row\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx4185\cellx4545\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar\cf1 b.\cell 400 pixels\cell d.\cell 540 pixels\cell\row 
\pard\nowidctlpar\hyphpar0\fs2\par

\pard\nowidctlpar\hyphpar0\sa1\fs12\par

\pard\nowidctlpar\hyphpar0\fs22\par

\pard\keep\hyphpar0\widctlpar\fi-630\sa120\tab 16.\tab (Refer to code example 9-1) Given the CSS that follows, what will the width of the section element be if the width of the main element is 1000 pixels?\par

\pard\keep\hyphpar0\widctlpar\b\f2\fs18 main \{ display: flex; \}\par
section \{\par
    flex-basis: 400px;\par
    flex-grow: 2;\par
\}\par
aside \{\par
    flex-basis: 300px;\par
    flex-grow: 1;\par

\pard\keep\hyphpar0\widctlpar\sa120\}\par
\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx4185\cellx4545\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar\b0\f0\fs22 a.\cell 500 pixels\cell c.\cell 700 pixels\cell\row\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx4185\cellx4545\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar\cf2 b.\cell 600 pixels\cell\cf1 d.\cell 800 pixels\cell\row 
\pard\nowidctlpar\hyphpar0\fs2\par

\pard\nowidctlpar\hyphpar0\sa1\fs12\par

\pard\nowidctlpar\hyphpar0\fs22\par

\pard\keep\hyphpar0\widctlpar\fi-630\sa120\tab 17.\tab (Refer to code example 9-1) Which of the following media queries would you use to change the layout of the main element to vertical orientation with the section above the sidebar?\par
\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar a.\cell\b\f2\fs18 @media screen and (max-width: 760px) \{\par
    main \{ flex-direction: column; \}\par
    section \{ order: 1; \}\par
    aside \{ order: 2; \}\par
\}\cell\row\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar\b0\f0\fs22 b.\cell\b\f2\fs18 @media screen and (max-width: 760px) \{\par
    main \{ flex-direction: vertical; \}\par
    section \{ order: 1; \}\par
    aside \{ order: 2; \}\par
\}\b0\f0\fs22\cell\row\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar c.\cell\b\f2\fs18 @media screen and (max-width: 760px) \{\par
    main \{ flex-direction: column; \}\par
    section \{ sequence: 1; \}\par
    aside \{ sequence: 2; \}\par
\}\b0\f0\fs22\cell\row\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar d.\cell\b\f2\fs18 @media screen and (max-width: 760px) \{\par
    main \{ flex-direction: vertical; \}\par
    section \{ sequence: 1; \}\par
    aside \{ sequence: 2; \}\par
\}\b0\f0\fs22\cell\row 
\pard\nowidctlpar\hyphpar0\fs2\par

\pard\nowidctlpar\hyphpar0\sa1\fs12\par

\pard\nowidctlpar\hyphpar0\fs22\par
\par
\par
\par
\par
\par

\pard\keep\hyphpar0\widctlpar\fi-630\sa120\tab 18.\tab What is another way to write the CSS that follows?\par

\pard\keep\hyphpar0\widctlpar\b\f2\fs18 section \{\par
    flex-basis: 500px;\par
    flex-grow: 3;\par
    flex-shrink: 1;\par

\pard\keep\hyphpar0\widctlpar\sa120\}\par
\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar\b0\f0\fs22 a.\cell\b\f2\fs18 section \{ flex: 500px 3 1; \}\b0\f0\fs22\cell\row\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar b.\cell\b\f2\fs18 section \{ flex: 500px 1 3; \}\b0\f0\fs22\cell\row\trowd\trgaph45\trleft-45\trrh270\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar\cf2 c.\cell\b\f2\fs18 section \{ flex: 3 1 500px; \}\b0\f0\fs22\cell\row\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar\cf1 d.\cell\b\f2\fs18 section \{ flex: 1 3 500px; \}\b0\f0\fs22\cell\row 
\pard\nowidctlpar\hyphpar0\fs2\par

\pard\nowidctlpar\hyphpar0\sa1\fs12\par

\pard\nowidctlpar\hyphpar0\fs22\par

\pard\keep\hyphpar0\widctlpar\fi-630\sa120\tab 19.\tab By default, the items in a flex container are displayed in the order they appear in the HTML. What property do you use to change this order?\par
\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx4185\cellx4545\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar a.\cell flex-direction\cell c.\cell direction\cell\row\trowd\trgaph45\trleft-45\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\cellx315\cellx4185\cellx4545\cellx8415 
\pard\intbl\keep\hyphpar0\widctlpar b.\cell flex-order\cell\cf2 d.\cell order\cell\row 
\pard\nowidctlpar\hyphpar0\cf1\fs2\par

\pard\nowidctlpar\hyphpar0\sa1\fs12\par

\pard\nowidctlpar\hyphpar0\tx634\tx1958\tx2592\tx3916\tx4550\tx5874\tx6508\fs22\par
}
 